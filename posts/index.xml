<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on aeinrw</title>
    <link>https://aeinrw.github.io/posts/</link>
    <description>Recent content in Posts on aeinrw</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>aeinrw@gmail.com (aeinrw)</managingEditor>
    <webMaster>aeinrw@gmail.com (aeinrw)</webMaster>
    <lastBuildDate>Sun, 07 Jun 2020 21:32:05 +0800</lastBuildDate>
    
	<atom:link href="https://aeinrw.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>go中append()的坑</title>
      <link>https://aeinrw.github.io/posts/go%E4%B8%ADappend-%E7%9A%84%E5%9D%91/</link>
      <pubDate>Sun, 07 Jun 2020 21:32:05 +0800</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://aeinrw.github.io/posts/go%E4%B8%ADappend-%E7%9A%84%E5%9D%91/</guid>
      <description>&lt;h1 id=&#34;slice的结构&#34;&gt;slice的结构&lt;/h1&gt;
&lt;p&gt;slice(切片)是go提供的变长数组, 类似于STL中的vector, 可以随意进行长度扩展.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>go中的byte,rune,string</title>
      <link>https://aeinrw.github.io/posts/go%E4%B8%AD%E7%9A%84byterunestring/</link>
      <pubDate>Wed, 03 Jun 2020 22:09:05 +0800</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://aeinrw.github.io/posts/go%E4%B8%AD%E7%9A%84byterunestring/</guid>
      <description>&lt;p&gt;在go语言中, 字符串&lt;code&gt;string&lt;/code&gt;被封装. 在学到接口时, &lt;code&gt;io.Writer&lt;/code&gt;和&lt;code&gt;io.Reader&lt;/code&gt;的参数都是&lt;code&gt;[]byte&lt;/code&gt;, 而不是&lt;code&gt;string&lt;/code&gt;. 另外, go也支持utf8, 又引入了&lt;code&gt;rune&lt;/code&gt;. 初学时让我很困扰, 这篇文章理清了三者之间的关系.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RSA加密算法和SSH免密登录</title>
      <link>https://aeinrw.github.io/posts/rsa%E7%AE%97%E6%B3%95%E5%92%8Cssh%E7%99%BB%E5%BD%95%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 29 May 2020 16:33:25 +0800</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://aeinrw.github.io/posts/rsa%E7%AE%97%E6%B3%95%E5%92%8Cssh%E7%99%BB%E5%BD%95%E8%AF%A6%E8%A7%A3/</guid>
      <description>&lt;h1 id=&#34;rsa算法&#34;&gt;RSA算法&lt;/h1&gt;
&lt;h2 id=&#34;数学原理&#34;&gt;数学原理&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;费马小定理: 若$a \in Z , p \in P$, 则$a^{p}-a$一定是p的倍数.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;即$(a^{p}-a)/p$的余数为零, $a^{p}/p$和$a/p$同余, $a^{p} \equiv a (mod\ p)$. 如果a不是p的倍数, 则$a^{p-1}-1$是p的倍数.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;欧拉-费马小定理: 若$a \in Z , n \in Z$, 且a,n互素, 则$a^{\varphi(n)}-1 \equiv 1 (mod\ n)$.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其中, 若n为质数,$\varphi(n)=n-1$. 若p,q互质, 则$\varphi(pq)=(p-1)(q-1)$.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>git reset命令</title>
      <link>https://aeinrw.github.io/posts/git-reset%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 27 May 2020 22:09:05 +0800</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://aeinrw.github.io/posts/git-reset%E5%91%BD%E4%BB%A4/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;git reset --soft
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;git reset --mix
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;git reset --hard
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在初学git时, &lt;code&gt;git reset&lt;/code&gt;命令非常难以理解. 在理解了git的底层数据结构后, 这个命令的使用就比较清楚了.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2019年度总结</title>
      <link>https://aeinrw.github.io/posts/2019%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 31 Dec 2019 23:42:38 +0800</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://aeinrw.github.io/posts/2019%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;&lt;em&gt;现在是2019年12月31日23时44分,还有15分钟就要2020年了.赶着在2020年到来之前,提交2019年最后一次commit.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docker学习笔记</title>
      <link>https://aeinrw.github.io/posts/docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 09 Jul 2019 20:37:19 +0800</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://aeinrw.github.io/posts/docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;p&gt;早就听说docker很火, 但一直没有linux设备去学. 有了服务器之后, 才发现linux确实香啊, 但也入门了好久.&lt;/p&gt;
&lt;p&gt;这是我学docker时的笔记, 教学视频看的是&lt;a href=&#34;https://www.bilibili.com/video/av47715282?from=search&amp;amp;seid=4956952821224565702&#34;&gt;docker教学视频链接&lt;/a&gt;, 讲的很好, 入门很快.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>各种软件安装和环境配置过程</title>
      <link>https://aeinrw.github.io/posts/%E5%90%84%E7%A7%8D%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%92%8C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Sat, 06 Jul 2019 14:48:17 +0800</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://aeinrw.github.io/posts/%E5%90%84%E7%A7%8D%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%92%8C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B/</guid>
      <description>&lt;p&gt;最近在服务器上玩centos,各种玩坏了就重装&amp;hellip;🤯&lt;/p&gt;
&lt;p&gt;安装软件和配置环境一直是非常蛋疼的事情,重装之后又要重新去找相关的教程.所以今天就自己曾经参考过的安装和配置教程做一个总结(都是成功的),免得以后重新找.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://aeinrw.github.io/posts/hello-world/</link>
      <pubDate>Fri, 05 Jul 2019 22:12:26 +0800</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://aeinrw.github.io/posts/hello-world/</guid>
      <description>&lt;p&gt;想来准备跨考计算机已经快两年了, 从2018年的下半年开始, 可以说是我学习最快的一段时间, 我也终于体会到了以兴趣为导向的学习是多么一件快乐的事情.&lt;/p&gt;
&lt;p&gt;其实很早之前就有写博客的想法, 但是一直没有动手. 今天算是开头了. 我想先聊聊我从安于现状到准备跨考的心路历程.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>