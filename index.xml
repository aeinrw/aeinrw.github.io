<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aeinrw</title>
    <link>https://blog.aeinrw.com/</link>
    <description>Recent content on aeinrw</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>aeinrw@gmail.com (aeinrw)</managingEditor>
    <webMaster>aeinrw@gmail.com (aeinrw)</webMaster>
    <lastBuildDate>Thu, 17 Dec 2020 11:04:26 +0800</lastBuildDate><atom:link href="https://blog.aeinrw.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pytorch.optim源码解析</title>
      <link>https://blog.aeinrw.com/posts/pytorch.optim%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 17 Dec 2020 11:04:26 +0800</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://blog.aeinrw.com/posts/pytorch.optim%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;h1 id=&#34;1-torchoptim&#34;&gt;1. torch.optim&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;torch.optim&lt;/code&gt;是实现各种优化算法的包，包含了常见优化器的实现，包的结构也非常简单，基类为optimizer.py下的&lt;code&gt;Optimizer&lt;/code&gt;，其他优化器全部继承于这个类。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>向量对矩阵求导</title>
      <link>https://blog.aeinrw.com/posts/%E5%90%91%E9%87%8F%E5%AF%B9%E7%9F%A9%E9%98%B5%E6%B1%82%E5%AF%BC/</link>
      <pubDate>Wed, 16 Dec 2020 15:24:04 +0800</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://blog.aeinrw.com/posts/%E5%90%91%E9%87%8F%E5%AF%B9%E7%9F%A9%E9%98%B5%E6%B1%82%E5%AF%BC/</guid>
      <description>&lt;p&gt;&lt;strong&gt;设：&lt;/strong&gt;
$$
\begin{align}
L\longleftarrow &amp;amp;y_{m\times 1} \longleftarrow X_{m\times n} \\&lt;br&gt;
y&amp;amp;=Xa
\end{align}
$$&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;求：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$$
\frac{\partial L}{\partial X}
$$&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>交叉熵损失函数的梯度</title>
      <link>https://blog.aeinrw.com/posts/%E4%BA%A4%E5%8F%89%E7%86%B5%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0%E7%9A%84%E6%A2%AF%E5%BA%A6/</link>
      <pubDate>Mon, 07 Dec 2020 21:11:04 +0800</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://blog.aeinrw.com/posts/%E4%BA%A4%E5%8F%89%E7%86%B5%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0%E7%9A%84%E6%A2%AF%E5%BA%A6/</guid>
      <description>&lt;h1 id=&#34;1-交叉熵梯度的推导&#34;&gt;1. 交叉熵梯度的推导&lt;/h1&gt;
&lt;h2 id=&#34;11-交叉熵损失函数&#34;&gt;1.1 交叉熵损失函数&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>记个人的第一个完整项目</title>
      <link>https://blog.aeinrw.com/posts/%E8%AE%B0%E4%B8%AA%E4%BA%BA%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Tue, 22 Sep 2020 20:01:52 +0800</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://blog.aeinrw.com/posts/%E8%AE%B0%E4%B8%AA%E4%BA%BA%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E9%A1%B9%E7%9B%AE/</guid>
      <description>&lt;h1 id=&#34;1-前后端分离的个人课程表&#34;&gt;1. 前后端分离的个人课程表&lt;/h1&gt;
&lt;p&gt;鉴于目前ios上没有让自己满意的课程表应用, 另外在看到&lt;a href=&#34;https://sspai.com/u/spencerwoo/updates&#34;&gt;@spencerwooo&lt;/a&gt;的&lt;a href=&#34;https://gist.github.com/spencerwooo/7955aefc4ffa5bc8ae7c83d85d05e7a4&#34;&gt;个人粉丝记录&lt;/a&gt;后产生想法. 前后用时一天, 从后端服务器发出json的API, 到ios上基于scriptable的小组件, 也算是自己的第一个前后端分离的完整项目.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>golang的汇编以及栈帧</title>
      <link>https://blog.aeinrw.com/posts/golang%E7%9A%84%E6%B1%87%E7%BC%96%E4%BB%A5%E5%8F%8A%E6%A0%88%E5%B8%A7/</link>
      <pubDate>Tue, 21 Jul 2020 15:24:16 +0800</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://blog.aeinrw.com/posts/golang%E7%9A%84%E6%B1%87%E7%BC%96%E4%BB%A5%E5%8F%8A%E6%A0%88%E5%B8%A7/</guid>
      <description>&lt;h1 id=&#34;golang的汇编&#34;&gt;golang的汇编&lt;/h1&gt;
&lt;p&gt;在go语言中, 函数的参数和返回值都是通过栈来传递的, 函数调用时会有自己的&lt;strong&gt;栈帧&lt;/strong&gt;, 并引入了几个寄存器来定位栈帧的大小和值的调用.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>人生第一次删站</title>
      <link>https://blog.aeinrw.com/posts/%E4%BA%BA%E7%94%9F%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%88%A0%E7%AB%99/</link>
      <pubDate>Sun, 28 Jun 2020 22:16:04 +0800</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://blog.aeinrw.com/posts/%E4%BA%BA%E7%94%9F%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%88%A0%E7%AB%99/</guid>
      <description>&lt;p&gt;2020.6.28日, 我由于一个没想到的bug, 导致了一次删站事件! 虽然没有源文件, 但是根据记忆和生成的html文件还是在三个小时候回复了原状.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>golang中append()的坑</title>
      <link>https://blog.aeinrw.com/posts/golang%E4%B8%ADappend%E7%9A%84%E5%9D%91/</link>
      <pubDate>Sun, 07 Jun 2020 20:40:39 +0800</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://blog.aeinrw.com/posts/golang%E4%B8%ADappend%E7%9A%84%E5%9D%91/</guid>
      <description>&lt;h1 id=&#34;slice的结构&#34;&gt;slice的结构&lt;/h1&gt;
&lt;p&gt;slice(切片)是go提供的变长数组, 类似于STL中的vector, 可以随意进行长度扩展.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>golang中的byte,rune,string</title>
      <link>https://blog.aeinrw.com/posts/golang%E4%B8%AD%E7%9A%84byterunestring/</link>
      <pubDate>Wed, 03 Jun 2020 21:09:05 +0000</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://blog.aeinrw.com/posts/golang%E4%B8%AD%E7%9A%84byterunestring/</guid>
      <description>&lt;p&gt;在go语言中, 字符串&lt;code&gt;string&lt;/code&gt;被封装. 在学到接口时, &lt;code&gt;io.Writer&lt;/code&gt;和&lt;code&gt;io.Reader&lt;/code&gt;的参数都是&lt;code&gt;[]byte&lt;/code&gt;, 而不是&lt;code&gt;string&lt;/code&gt;. 另外, go也支持utf8, 又引入了&lt;code&gt;rune&lt;/code&gt;. 初学时让我很困扰, 这篇文章理清了三者之间的关系.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RSA算法和ssh登录详解</title>
      <link>https://blog.aeinrw.com/posts/rsa%E7%AE%97%E6%B3%95%E5%92%8Cssh%E7%99%BB%E5%BD%95%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 29 May 2020 16:33:25 +0000</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://blog.aeinrw.com/posts/rsa%E7%AE%97%E6%B3%95%E5%92%8Cssh%E7%99%BB%E5%BD%95%E8%AF%A6%E8%A7%A3/</guid>
      <description>&lt;h1 id=&#34;rsa算法&#34;&gt;RSA算法&lt;/h1&gt;
&lt;h2 id=&#34;数学原理&#34;&gt;数学原理&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;费马小定理: 若$a \in Z , p \in P$, 则$a^{p}-a$一定是p的倍数.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;即$(a^{p}-a)/p$的余数为零, $a^{p}/p$和$a/p$同余, $a^{p} \equiv a (mod\ p)$. 如果a不是p的倍数, 则$a^{p-1}-1$是p的倍数.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;欧拉-费马小定理: 若$a \in Z , n \in Z$, 且a,n互素, 则$a^{\varphi(n)}-1 \equiv 1 (mod\ n)$.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其中, 若n为质数,$\varphi(n)=n-1$. 若p,q互质, 则$\varphi(pq)=(p-1)(q-1)$.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2019年度总结</title>
      <link>https://blog.aeinrw.com/posts/2019%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 31 Dec 2019 23:42:38 +0000</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://blog.aeinrw.com/posts/2019%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;&lt;em&gt;现在是2019年12月31日23时44分,还有15分钟就要2020年了.赶着在2020年到来之前,提交2019年最后一次commit.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://blog.aeinrw.com/posts/hello-world/</link>
      <pubDate>Fri, 05 Jul 2019 22:12:26 +0000</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://blog.aeinrw.com/posts/hello-world/</guid>
      <description>&lt;h1 id=&#34;你好-世界&#34;&gt;你好 世界&lt;/h1&gt;
&lt;p&gt;想来准备跨考计算机已经快两年了, 从2018年的下半年开始, 可以说是我学习最快的一段时间, 我也终于体会到了以兴趣为导向的学习是多么一件快乐的事情.&lt;/p&gt;
&lt;p&gt;其实很早之前就有写博客的想法, 但是一直没有动手. 今天算是开头了. 我想先聊聊我从安于现状到准备跨考的心路历程.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>https://blog.aeinrw.com/about/</link>
      <pubDate>Fri, 05 Jul 2019 12:10:35 +0800</pubDate>
      <author>aeinrw@gmail.com (aeinrw)</author>
      <guid>https://blog.aeinrw.com/about/</guid>
      <description>嗨!感谢你发现我! 我是aeinrw. 这个博客是用来平时写点学习中的感悟和总结的,偶尔也会写点其他东西. 😂😘😍😊😁</description>
    </item>
    
  </channel>
</rss>
